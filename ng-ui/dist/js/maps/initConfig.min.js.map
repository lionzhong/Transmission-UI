{"version":3,"sources":["initConfig.js"],"names":["define","$","_","tr","angularAMD","app","angular","module","$app","bootstrap","config","$touchProvider","ngClickOverrideEnabled","factory","$http","$q","ajax","op","deferred","defer","method","url","baseUrl","undefined","headers","sessionId","X-Transmission-Session-Id","data","param","when","response","status","resolve","reject","errService","err","cancel","promise","service","getSession","getSessionStats","serviceAruments","all","torrentSame","detailSame","getTorrent","arguments","fields","concat","getActiveTorrent","ids","getFullDetail","getDetail","startTorrent","stopTorrent","removeFromList","removeAllData","delete-local-data","pauseTransform","startTransform","startTransformNow","controller","$scope","$sce","ajaxService","session","then","global","reason","str","temp","start","indexOf","end","substring","length","$emit","getStatsData","stats","console","log","getRecentlyActiveTorrentData","pool","activeTorrent","each","torrents","value","index","$index","findIndex","torrent","o","id","merge","sortTorrentData","sortBy","item","addedDate","loopGetTorrentData","obj","push","loop","setInterval","loopFragment","loopGetSessionData","selectTorrent","selectedIndex","detail","close","show","swip","left","w","window","width","consolePanel","right","bytesConvert","bytes","band","parseFloat2","num","parsTorrentClassName","className","parseEta","eta","secondsToTime","getStatusText","metaComplete","howLong","parseInt","Date","getTime","getFullDate","ms","parseFullDate","parseText","Status","html","peersSendingToUs","peersConnected","rateDownload","rateUpload","peersGettingFromUs","trustAsHtml","TransformData","metadataPercentComplete","totalSize","percentDone","uploadedEver","uploadRatio","target","tabNames","tabSelect","selectedTabIndex","torrentData","fullDetail","$response","clearInterval","closeAjax","reload","validationIDS","result","init","active","localMode","require","localData","loadSession","$on","event","tmpUrl","blankDetail","tips","settings","mobileMode","modalUrl","document","addEventListener","cancelable","defaultPrevented","preventDefault","directive","restrict","link","scope","el","attrs","replaceWith","children"],"mappings":"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","file":"../initConfig.min.js","sourcesContent":["/**\r\n * Created by vincent on 2017/3/4.\r\n */\r\n\r\ndefine([\"jquery\", \"lodash\", \"transmission\", \"angularAMD\", \"angular-touch\"], function($, _, tr, angularAMD) {\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"transmission\", [\"ngTouch\"]);\r\n\r\n    var $app = angularAMD.bootstrap(app);\r\n\r\n    $app.config([\"$touchProvider\", function($touchProvider) {\r\n        $touchProvider.ngClickOverrideEnabled([true]);\r\n    }]);\r\n\r\n    $app.factory(\"ajaxService\", [\"$http\", \"$q\", function($http, $q) {\r\n        var service = {};\r\n        var baseUrl = \"/transmission/rpc\";\r\n\r\n        function ajax(op) {\r\n            var deferred = $q.defer();\r\n            var ajax = $http({\r\n                method: \"POST\",\r\n                url: baseUrl + (op.url !== undefined ? op.url : \"\"),\r\n                headers: op.sessionId !== undefined ? { \"X-Transmission-Session-Id\": op.sessionId } : {},\r\n                data: (function() {\r\n                    var param = {};\r\n                    switch (op.param.method) {\r\n                        case \"torrent-get\":\r\n                            param = op.param;\r\n                            break;\r\n                        case \"torrent-remove\":\r\n                            param = op.param;\r\n                            break;\r\n                        default:\r\n                            param = op.param;\r\n                            break;\r\n                    }\r\n                    return param;\r\n                })()\r\n            });\r\n\r\n            $q.when(ajax, function(response, status, headers, config) {\r\n                deferred.resolve(response, status, headers, config);\r\n            }, function(response, status) {\r\n                if (status !== 0) {\r\n                    deferred.reject({\r\n                        errService: op.errService ? op.errService : \"Service Error\",\r\n                        err: op.err,\r\n                        response: response,\r\n                        status: status\r\n                    });\r\n                }\r\n            });\r\n\r\n            return op.cancel === true ? deferred : deferred.promise;\r\n        }\r\n\r\n        service.getSession = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-get\"\r\n                },\r\n                url: \"?type=getSession\"\r\n            });\r\n        };\r\n\r\n        service.getSessionStats = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-stats\"\r\n                },\r\n                url: \"?type=getSessionStats\"\r\n            });\r\n        };\r\n\r\n        var serviceAruments = {\r\n            all:[\"id\"],\r\n            torrentSame: [\"error\", \"errorString\", \"eta\", \"isFinished\", \"isStalled\", \"leftUntilDone\", \"metadataPercentComplete\", \"peersConnected\", \"peersGettingFromUs\", \"peersSendingToUs\", \"percentDone\", \"queuePosition\", \"rateDownload\", \"rateUpload\", \"recheckProgress\", \"seedRatioMode\", \"seedRatioLimit\", \"sizeWhenDone\", \"status\", \"trackers\", \"downloadDir\", \"uploadedEver\", \"uploadRatio\", \"webseedsSendingToUs\"],\r\n            detailSame:[\"activityDate\",\"corruptEver\",\"desiredAvailable\",\"downloadedEver\",\"fileStats\",\"haveUnchecked\",\"haveValid\",\"peers\",\"startDate\",\"trackerStats\"]\r\n        };\r\n\r\n        service.getTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.torrentSame,[\r\n                            \"addedDate\",\r\n                            \"name\",\r\n                            \"totalSize\"\r\n                        ])\r\n                    }\r\n                },\r\n                url: \"?type=getTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getActiveTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        fields: _.concat(serviceAruments.all,serviceAruments.torrentSame),\r\n                        ids: \"recently-active\"\r\n                    }\r\n                },\r\n                url: \"?type=getActiveTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getFullDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame,[\r\n                            \"comment\",\r\n                            \"creator\",\r\n                            \"dateCreated\",\r\n                            \"files\",\r\n                            \"hashString\",\r\n                            \"isPrivate\",\r\n                            \"pieceCount\",\r\n                            \"pieceSize\"\r\n                        ]),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getFullDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.startTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-start\"\r\n                },\r\n                url: \"?type=startTorrent\"\r\n            });\r\n        };\r\n\r\n        service.stopTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-stop\"\r\n                },\r\n                url: \"?type=stopTorrent\"\r\n            });\r\n        };\r\n\r\n        service.removeFromList = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeFromList\"\r\n            });\r\n        };\r\n\r\n        service.removeAllData = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"delete-local-data\": true,\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeAllData\"\r\n            });\r\n        };\r\n\r\n        service.pauseTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-stop\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-stop\"\r\n            });\r\n        };\r\n\r\n        service.startTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start\"\r\n            });\r\n        };\r\n\r\n        service.startTransformNow = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start-now\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start-now\"\r\n            });\r\n        };\r\n        return service;\r\n    }]);\r\n\r\n    $app.controller(\"mainController\", [\"$scope\", \"$http\", \"$q\", \"$sce\", \"ajaxService\", function($scope, $http, $q, $sce, ajaxService) {\r\n\r\n        //获取session\r\n        $scope.getSession = function(session) {\r\n            //获取session\r\n            ajaxService.getSession(session).then(function(response) {\r\n                $scope.data.global = response.data.arguments;\r\n            }, function(reason) {\r\n                var str = reason.response.data;\r\n                var temp = \"X-Transmission-Session-Id: \";\r\n                var start = str.indexOf(temp);\r\n                var end = str.indexOf(\"<\\/code>\");\r\n                $scope.data.session = str.substring((start + (temp.length - 1)), end);\r\n                $scope.$emit(\"getSessionDone\");\r\n            });\r\n        };\r\n\r\n        //获取现在的状态\r\n        $scope.getStatsData = function() {\r\n            //获取session\r\n            ajaxService.getSessionStats($scope.data.session).then(function(response) {\r\n                $scope.data.stats = response.data.arguments;\r\n                $scope.$emit(\"getStatsDone\");\r\n            }, function(reason) {\r\n                console.log(\"查询stats失败\");\r\n            });\r\n        };\r\n\r\n        //获取正在活动的Torrent数据\r\n        $scope.getRecentlyActiveTorrentData = function() {\r\n            //获取活动中的torrent数据\r\n            $scope.pool.ajax.activeTorrent = ajaxService.getActiveTorrent($scope.data.session);\r\n            $scope.pool.ajax.activeTorrent.promise.then(function(response) {\r\n                //替换数据列表中对应的数据\r\n                _.each(response.data.arguments.torrents, function(value, index) {\r\n                    var $index = _.findIndex($scope.data.torrent, function(o) {\r\n                        return o.id === value.id;\r\n                    });\r\n\r\n                    if ($index > -1) {\r\n                        _.merge($scope.data.torrent[$index], value);\r\n                    }\r\n                });\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //排序种子数据\r\n        $scope.sortTorrentData = function() {\r\n            $scope.data.torrent = _.sortBy($scope.data.torrent, function(item) {\r\n                return -item.addedDate;\r\n            });\r\n            return $scope.data.torrent;\r\n        };\r\n\r\n        //循环获取种子数据\r\n        $scope.loopGetTorrentData = function() {\r\n            //get all torrent(list)\r\n            $scope.pool.ajax.torrent = ajaxService.getTorrent($scope.data.session);\r\n            $scope.pool.ajax.torrent.promise.then(function(response) {\r\n                $scope.data.torrent = _.sortBy(response.data.arguments.torrents, function(item) {\r\n                    return -item.addedDate;\r\n                });\r\n\r\n                $scope.data.ids = [];\r\n                _.each($scope.data.torrent, function(obj, index) {\r\n                    $scope.data.ids.push(obj.id);\r\n                });\r\n\r\n                //loop the active torrent\r\n                $scope.pool.ajax.activeTorrent = $scope.getRecentlyActiveTorrentData();\r\n                $scope.pool.loop.activeTorrent = setInterval(function() {\r\n                    $scope.getRecentlyActiveTorrentData();\r\n                }, $scope.loopFragment.torrent);\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //循环获取session数据\r\n        $scope.loopGetSessionData = function() {\r\n            $scope.getSession($scope.data.session);\r\n            $scope.pool.loop.torrent = setInterval(function() {\r\n                $scope.getSession($scope.data.session);\r\n            }, $scope.loopFragment.session);\r\n        };\r\n\r\n        //选择某下载任务\r\n        $scope.selectTorrent = function(index) {\r\n            if (index === $scope.data.selectedIndex) {\r\n                return false;\r\n            }\r\n\r\n            $scope.data.selectedIndex = index;\r\n            if ($scope.detail.status === true) {\r\n                $scope.detail.close();\r\n                $scope.detail.show();\r\n            }\r\n        };\r\n\r\n        //滑动操作\r\n        $scope.swip = {\r\n            left: function() {\r\n                var w = $(window).width();\r\n                if (w <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.detail.show();\r\n                    } else if ($scope.consolePanel.status === true && $scope.detail.status === false) {\r\n                        $scope.consolePanel.close();\r\n                    }\r\n                }\r\n            },\r\n            right: function() {\r\n                var w = $(window).width();\r\n                if (w <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === true) {\r\n                        $scope.detail.close();\r\n                    } else if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.consolePanel.show();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        //流量转换\r\n        $scope.bytesConvert = function(bytes) {\r\n            var op = {\r\n                \"data\": bytes,\r\n                \"band\": 1000\r\n            };\r\n            return tr.bytesConvert(op);\r\n        };\r\n\r\n        //分析已下载数据\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //解析下载任务的样式名\r\n        $scope.parsTorrentClassName = function(status, index) {\r\n            var className = \"\";\r\n            //4正在下载\r\n            switch (status) {\r\n                case 0:\r\n                    className = \"paused\";\r\n                    break;\r\n                case 4:\r\n                    className = \"downloading\";\r\n                    break;\r\n                case 6:\r\n                    className = \"seeding\";\r\n                    break;\r\n                default:\r\n                    className = \"seeding\";\r\n                    break;\r\n            }\r\n            if (index === $scope.data.selectedIndex) {\r\n                className += \" selected\";\r\n            }\r\n            return className;\r\n        };\r\n\r\n        //解析剩余时间\r\n        $scope.parseEta = function(eta) {\r\n            var str = \"\";\r\n            if (eta === -1) {\r\n                str = \"不可用\";\r\n            } else if (eta === -2) {\r\n                str = \"无法预估\";\r\n            } else {\r\n                str = tr.secondsToTime(eta);\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //获取状态文本\r\n        $scope.getStatusText = function(op) {\r\n            var str = \"\";\r\n            switch (op.status) {\r\n                case 0:\r\n                    if (op.metaComplete < 1) {\r\n                        str = \"磁性链接下载元数据中\";\r\n                    } else {\r\n                        str = \"已暂停\";\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    str = \"下载中\";\r\n                    break;\r\n                case 6:\r\n                    str = \"做种中\";\r\n                    break;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        //获取运行时长\r\n        $scope.howLong = function(start) {\r\n            return $scope.parseEta(parseInt((new Date().getTime()) / 1000) - start);\r\n        };\r\n\r\n        $scope.getFullDate = function(ms) {\r\n            return tr.parseFullDate(ms);\r\n        };\r\n\r\n        //解析torrent列表文字\r\n        $scope.parseText = {\r\n            \"Status\": function(index) {\r\n                var data = $scope.data.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        html += \"已暂停\";\r\n                        break;\r\n                    case 4:\r\n                        html += \"下载自\";\r\n                        html += \"<span>\" + data.peersSendingToUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-download\\\">\";\r\n                        html += $scope.bytesConvert(data.rateDownload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    case 6:\r\n                        html += \"分享至\";\r\n                        html += \"<span>\" + data.peersGettingFromUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            },\r\n            \"TransformData\": function(index) {\r\n                var data = $scope.data.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接\";\r\n                            html += \"<span>\";\r\n                            html += \"下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"%）\";\r\n                            html += \"</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        // className = \"downloading\";,\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接<span> 下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"）</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                            if (data.uploadedEver > 0) {\r\n                                html += \"<span>\";\r\n                                html += \"已上传\";\r\n                                html += \"</span>\";\r\n                                html += \"<span>\";\r\n                                html += $scope.bytesConvert(data.uploadedEver);\r\n                                html += \"</span>\";\r\n                            }\r\n                            html += \"<span>\";\r\n                            html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        // className = \"seeding\";\r\n                        html += \"已上传\";\r\n                        html += \"<span>\";\r\n                        html += $scope.bytesConvert(data.uploadedEver) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"分享率(\" + tr.parseFloat2(data.uploadRatio) + \"%)\";\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            }\r\n        };\r\n\r\n        //明细\r\n        $scope.detail = {\r\n            \"target\": $(\"#torrent-detail\"),\r\n            \"className\": \"show\",\r\n            \"tabNames\": [\"info\", \"peers\", \"tracker\", \"files\"],\r\n            \"tabSelect\": function(index) {\r\n                $scope.detail.selectedTabIndex = index;\r\n            },\r\n            \"status\": false,\r\n            \"torrentData\": false,\r\n            \"selectedTabIndex\": 0,\r\n            \"show\": function() {\r\n                $scope.detail.status = $scope.detail.status !== true;\r\n\r\n                if ($scope.detail.status === true) {\r\n                    if ($scope.data.selectedIndex !== '') {\r\n                        $scope.detail.torrentData = $scope.data.torrent[$scope.data.selectedIndex];\r\n                        $scope.pool.ajax.fullDetail = ajaxService.getFullDetail($scope.data.session, [$scope.data.torrent[$scope.data.selectedIndex].id]);\r\n                        $scope.pool.ajax.fullDetail.promise.then(function(response) {\r\n                            $scope.data.detail = response.data.arguments.torrents[0];\r\n                            $scope.pool.loop.detail = setInterval(function() {\r\n                                $scope.pool.ajax.detail = ajaxService.getDetail($scope.data.session, [$scope.data.torrent[$scope.data.selectedIndex].id]);\r\n                                $scope.pool.ajax.detail.promise.then(function($response) {\r\n                                    $scope.data.detail = _.merge($scope.data.detail, $response.data.arguments.torrents[0]);\r\n                                }, function(reason) {\r\n                                    console.log(\"维护明细数据失败\");\r\n                                });\r\n                            }, $scope.loopFragment.detail);\r\n                        }, function(reason) {\r\n                            console.log(\"获取明细失败\");\r\n                        });\r\n                    }\r\n                } else {\r\n                    $scope.detail.close();\r\n                }\r\n            },\r\n            \"close\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.detail.status = false;\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        $scope.closeAjax = function(obj) {\r\n            if (typeof obj === \"object\" && typeof obj.resolve === \"function\") {\r\n                obj.resolve();\r\n            }\r\n        };\r\n\r\n        $scope.reload = {\r\n            \"torrent\": function() {\r\n                clearInterval($scope.pool.loop.activeTorrent);\r\n                $scope.closeAjax($scope.pool.ajax.torrent);\r\n                $scope.closeAjax($scope.pool.ajax.activeTorrent);\r\n                $scope.loopGetTorrentData();\r\n            },\r\n            \"detail\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        var validationIDS = function(ids) {\r\n            var result = true;\r\n            if ($scope.data.torrent.length === 0 || ids === undefined || ids.length === 0 || (ids.length === 1 && ids[0] === undefined)) {\r\n                result = false;\r\n            }\r\n\r\n            if ($(window).width() <= 1024) {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.data.session\r\n            ajaxService.removeFromList($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.data.session\r\n            ajaxService.removeAllData($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.pauseTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.pauseTransform($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransform($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransformNow = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransformNow($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.consolePanel = {\r\n            status: false,\r\n            show: function() {\r\n                $scope.consolePanel.status = true;\r\n            },\r\n            close: function() {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n        };\r\n\r\n        $scope.init = function() {\r\n\r\n            $scope.loopFragment = {\r\n                torrent: 5000,\r\n                active: 5000,\r\n                detail: 5000,\r\n                session: 15000\r\n            };\r\n\r\n            //loop pool\r\n            $scope.pool = {\r\n                \"loop\": {\r\n                    \"torrent\": \"\",\r\n                    \"activeTorrent\": \"\",\r\n                    \"session\": \"\",\r\n                    \"detail\": \"\"\r\n                },\r\n                \"ajax\": {\r\n                    \"torrent\": {},\r\n                    \"activeTorrent\": {},\r\n                    \"detail\": {},\r\n                    \"fullDetail\": {}\r\n                }\r\n            };\r\n\r\n            //数据\r\n            $scope.data = {\r\n            \tsession: \"\",\r\n                global: {},\r\n                torrent: [],\r\n                selectedIndex: \"\",\r\n                stats: {},\r\n                ids: [],\r\n                detail: {}\r\n            };\r\n\r\n            //load local data\r\n            $scope.localMode = true;\r\n\r\n            if ($scope.localMode === true) {\r\n                var deferred = $q.defer();\r\n\r\n                require([\"localData\"], function(localData) {\r\n                    deferred.resolve(localData);\r\n                });\r\n\r\n                deferred.promise.then(function(response) {\r\n                    $scope.data = {\r\n                        global: response.global,\r\n                        torrent: response.torrent,\r\n                        selectedIndex: response.selectedIndex,\r\n                        stats: response.stats,\r\n                        ids: response.ids,\r\n                        detail: response.detail\r\n                    };\r\n                }, function(reason) {\r\n\r\n                });\r\n            }\r\n\r\n            //连续获取seesion\r\n            var loadSession = setInterval(function() {\r\n                $scope.getSession();\r\n            }, 3000);\r\n            //获取到session后结束循环获取session\r\n            $scope.$on(\"getSessionDone\", function(event) {\r\n                clearInterval(loadSession);\r\n\r\n                $scope.loopGetSessionData();\r\n\r\n                $scope.getStatsData();\r\n            });\r\n\r\n            $scope.$on(\"getStatsDone\", function() {\r\n                $scope.loopGetTorrentData();\r\n            });\r\n\r\n            $scope.tmpUrl = {\r\n                detail: \"template/detail.html\",\r\n                blankDetail: \"template/blankdetail.html\",\r\n                tips: \"template/tips.html\",\r\n                settings: \"template/settings.html\"\r\n            };\r\n\r\n            $scope.mobileMode = false;\r\n\r\n            $scope.modalUrl = \"\";\r\n\r\n            document.addEventListener('touchstart', function(event) {\r\n                // 判断默认行为是否可以被禁用\r\n                if (event.cancelable) {\r\n                    // 判断默认行为是否已经被禁用\r\n                    if (!event.defaultPrevented) {\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }, false);\r\n        };\r\n\r\n        $scope.init();\r\n\r\n    }]);\r\n\r\n    $app.directive('includeReplace', function() {\r\n        return {\r\n            require: 'ngInclude',\r\n            restrict: 'A',\r\n            /* optional */\r\n            link: function(scope, el, attrs) {\r\n                el.replaceWith(el.children());\r\n            }\r\n        };\r\n    });\r\n\r\n    return $app;\r\n});\r\n"]}